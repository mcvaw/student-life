name: "Godot: build and publish"

on:
  push:
    branches:
      - master

env:
  GAME: student-quest
  COMPANY: pixeltrain
  GODOT_VERSION: '3.3'
  RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
  RELEASE_KEYSTORE_USER: ${{ secrets.RELEASE_KEYSTORE_USER }}
  RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
  BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}

jobs:
  windows_export:
    name: Windows export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create directories
        run: mkdir -v -p build/windows
      # Godot templates
      - name: Create directory for templates
        run: mkdir -v -p ~/.local/share/godot/templates
      - name: Move templates
        run: mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      # Godot config
      - name: Create directory for godot config
        run: mkdir -v -p ~/.config/godot
      - name: Copy godot config
        run: mv /root/.config/godot/editor_settings-3.tres ~/.config/godot/editor_settings-3.tres
      # Set version
      - name: Read version from file
        run: GAME_VERSION=$(cat VERSION.txt)
      - name: Set product version
        run: sed 's@application/product_version=".*"@application/product_version="'$GAME_VERSION'"@g' -i export_presets.cfg
      - name: Set file version
        run: sed 's@application/file_version=".*"@application/file_version="'$GAME_VERSION'"@g' -i export_presets.cfg
      # Godot
      - name: Build
        run: godot -v --export "windows" build/windows/$GAME.exe
      # Butler
      # Do not forget to define BUTLER_API_KEY
      - name: Publish
        run: butler push build/windows $COMPANY/$GAME:windows --userversion-file VERSION.txt
  linux_export:
    name: Linux export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create directories
        run: mkdir -v -p build/linux
      # Godot templates
      - name: Create directory for templates
        run: mkdir -v -p ~/.local/share/godot/templates
      - name: Move templates
        run: mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      # Godot config
      - name: Create directory for godot config
        run: mkdir -v -p ~/.config/godot
      - name: Copy godot config
        run: mv /root/.config/godot/editor_settings-3.tres ~/.config/godot/editor_settings-3.tres
      # Godot
      - name: Build
        run: godot -v --export "linux" build/linux/$GAME.x86_64
      # Butler
      # Do not forget to define BUTLER_API_KEY
      - name: Publish
        run: butler push build/linux $COMPANY/$GAME:linux --userversion-file VERSION.txt
  mac_os_export:
    name: Mac OS export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create directories
        run: mkdir -v -p build/mac
      # Godot templates
      - name: Create directory for templates
        run: mkdir -v -p ~/.local/share/godot/templates
      - name: Move templates
        run: mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      # Godot config
      - name: Create directory for godot config
        run: mkdir -v -p ~/.config/godot
      - name: Copy godot config
        run: mv /root/.config/godot/editor_settings-3.tres ~/.config/godot/editor_settings-3.tres
      # Set version
      - name: Read version from file
        run: GAME_VERSION=$(cat VERSION.txt)
      - name: Set short version
        run: sed 's@application/short_version=".*"@application/short_version="'$GAME_VERSION'"@g' -i export_presets.cfg
      - name: Set version
        run: sed 's@application/version=".*"@application/version="'$GAME_VERSION'"@g' -i export_presets.cfg
      # Godot
      - name: Build
        run: godot -v --export "mac" build/mac/$GAME.zip
      # Butler
      # Do not forget to define BUTLER_API_KEY
      - name: Publish
        run: butler push build/mac/$GAME.zip $COMPANY/$GAME:mac --userversion-file VERSION.txt
  android_export:
    name: Android export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create directories
        run: mkdir -v -p build/android
      # Godot templates
      - name: Create directory for templates
        run: mkdir -v -p ~/.local/share/godot/templates
      - name: Move templates
        run: mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      # Godot config
      - name: Create directory for godot config
        run: mkdir -v -p ~/.config/godot
      - name: Copy godot config
        run: mv /root/.config/godot/editor_settings-3.tres ~/.config/godot/editor_settings-3.tres
      # Prepare keystore
      - name: Create keystore
        run: echo $RELEASE_KEYSTORE | base64 --decode > release.keystore
      - name: Set keystore path
        run: sed 's@keystore/release=".*"@keystore/release="release.keystore"@g' -i export_presets.cfg
      - name: Set keystore user
        run: sed 's@keystore/release_user=".*"@keystore/release_user="'$RELEASE_KEYSTORE_USER'"@g' -i export_presets.cfg
      - name: Set keystore password
        run: sed 's@keystore/release_password=".*"@keystore/release_password="'$RELEASE_KEYSTORE_PASSWORD'"@g' -i export_presets.cfg
      # Set version
      - name: Read version from file
        run: GAME_VERSION=$(cat VERSION.txt)
      - name: Set version
        run: sed 's@version/name=".*"@version/name="'$GAME_VERSION'"@g' -i export_presets.cfg
      # Godot
      - name: Build
        run: godot -v --export "android" build/android/$GAME.apk
      # Butler
      # Do not forget to define BUTLER_API_KEY
      - name: Publish
        run: butler push build/android/$GAME.apk $COMPANY/$GAME:android --userversion-file VERSION.txt
