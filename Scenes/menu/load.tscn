[gd_scene load_steps=3 format=2]

[ext_resource path="res://Scenes/menu/button-load.tscn" type="PackedScene" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Control

export (PackedScene) var loadbtn

# При нажатии на удаление сохраненной игры
func on_Del_Pressed(num):
	get_node(\"/root/fx\").click1()
	# Удалить контейнер с кнопками
	var nd = get_node(\"ColorRect/VBoxContainer/\" + str(num))
	var glob = get_node(\"/root/global\")
	nd.get_parent().remove_child(nd)
	# Удалить номер игры из массива
	var pos = glob.saved_games.bsearch(num)
	glob.saved_games.remove(pos)
	# Удалить сам файл
	var dir = Directory.new()
	dir.remove(\"user://save.\" + str(num) + \".txt\")


# Вернуться в меню
func on_Button_Pressed():
	# Щелчек
	get_node(\"/root/fx\").click1()
	# Сохранить изменения
	get_node(\"/root/global\").write_file()
	# Загрузить сцену меню
	assert(get_tree().change_scene(\"res://Scenes/menu/menu.tscn\") == OK)


func _ready():
	# Основной вертикальный контейнер
	var box = get_node(\"ColorRect/VBoxContainer\")
	# Глобальный объект
	var glob = get_node(\"/root/global\")
	var list = []
	# Для всех номеров сохраненных игр
	for i in glob.saved_games:
		# Загрузить шаблон кнопки
		var tmp = loadbtn.instance()
		tmp.name = str(i)
		box.add_child(tmp)
		# Изменить название сохранения
		var loadpath = \"ColorRect/VBoxContainer/\" + str(i) + \"/BtnLoad/ContLoad/TextGame\"
		get_node(loadpath).text = \"Сохраненная игра #\" + str(i)
		# Привязать кнопку удаления
		var delpath = \"ColorRect/VBoxContainer/\" + str(i) + \"/BtnDel\"
		get_node(delpath).connect(\"pressed\", self, \"on_Del_Pressed\", [i])
#		# Добавить stage из файла в список, 
#		# чтобы потом найти описание этапа
		var fl = File.new()
		fl.open(\"user://save.\" + str(i) + \".txt\", File.READ)
		var stage = 0
		var content = parse_json(fl.get_line())
		if content != null:
			if content.has(\"stage\"):
				stage = content[\"stage\"]
		list.push_back(int(stage))
		fl.close()
	# Кнопка возврата
	var btn = Button.new()
	btn.text = \"Назад в меню\"
	# Занять доступный объем
	btn.size_flags_horizontal = SIZE_EXPAND_FILL
	btn.size_flags_vertical = SIZE_EXPAND_FILL
	# Привязать к функции возврата
	btn.connect(\"pressed\", self, \"on_Button_Pressed\")
	box.add_child(btn)
	# Присвоить этапы
	var dat = get_node(\"/root/global\").get_event_names(list)
	var ind = 0
	for i in glob.saved_games:
		var stagepath = \"ColorRect/VBoxContainer/\" + str(i) + \"/BtnLoad/ContLoad/TextStage\"
		get_node(stagepath).text = dat[str(list[ind])]
		ind+=1
"

[node name="Control" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}
loadbtn = ExtResource( 1 )

[node name="ColorRect" type="ColorRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 1 )

[node name="VBoxContainer" type="VBoxContainer" parent="ColorRect"]
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_vertical = 3
__meta__ = {
"_edit_use_anchors_": false
}
