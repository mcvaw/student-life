[gd_scene load_steps=3 format=2]

[ext_resource path="res://Fonts/PressStart_Res/Pixel_font_large.tres" type="DynamicFont" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Control

# Dialog template

# Animated objects
export (NodePath) var body_bg
export (NodePath) var body_fg

# Labels
export (NodePath) var person_name
export (NodePath) var main_text

# For other scripts
export (NodePath) var next_button

onready var tween = $Tween
var first : = true

# Animation duration
const shape_time : = 0.1
# Offsets
const c_left_from : = 100
const c_left_to : = 50
const c_right_from : = 1770
const c_right_to : = 1870


# Animation
func anim_template(left_from : int, left_to : int, 
					right_from : int, right_to : int, 
					animate_form : bool, atext:bool = true) -> void:
	if animate_form:
		tween.interpolate_property(
			get_node(body_bg), \"margin_left\",
			left_from, left_to, shape_time,
			Tween.TRANS_LINEAR, Tween.EASE_IN_OUT
		)
		tween.interpolate_property(
			get_node(body_bg), \"margin_right\",
			right_from, right_to, shape_time,
			Tween.TRANS_LINEAR, Tween.EASE_IN_OUT
		)
		tween.interpolate_property(
			get_node(body_fg), \"margin_left\",
			left_from, left_to, shape_time,
			Tween.TRANS_LINEAR, Tween.EASE_IN_OUT
		)
		tween.interpolate_property(
			get_node(body_fg), \"margin_right\",
			right_from, right_to, shape_time,
			Tween.TRANS_LINEAR, Tween.EASE_IN_OUT
		)
		tween.start()
		yield(get_tree().create_timer(shape_time), \"timeout\")
	if atext:
		# Text animation
		tween.interpolate_property(
			get_node(main_text), \"percent_visible\",
			0, 1, len(get_node(main_text).text) / 60.0,
			Tween.TRANS_LINEAR
		)
		tween.start()


# Appearance animation
func play(anim : bool):
	anim_template(
		c_left_from, c_left_to, 
		c_right_from, c_right_to, 
		anim
	)


# Fade animation
func play_reverse():
	anim_template(
		c_left_to, c_left_from, 
		c_right_to, c_right_from, 
		true, false
	)


# Called by a third-party script
func play_dialog(person : String, dialog_text : String) -> void:
	if tween.is_active():
		tween.stop_all()
	
	get_node(person_name).text = person
	get_node(main_text).percent_visible = 0
	get_node(main_text).text = dialog_text
	if first:
		play(true)
		first = false
	else:
		play(false)

"

[node name="Dialog-Template_Control_0" type="Control"]
light_mask = 0
anchor_right = 1.0
anchor_bottom = 1.0
rect_min_size = Vector2( 1920, 1080 )
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}
body_bg = NodePath("Dialog_MarginContainer/Border_ColorRect")
body_fg = NodePath("Dialog_MarginContainer/Main_MarginContainer")
person_name = NodePath("Dialog_MarginContainer/Main_MarginContainer/Text_MarginContainer/Text_HBoxContainer/Text_VBoxContainer/Name_Label")
main_text = NodePath("Dialog_MarginContainer/Main_MarginContainer/Text_MarginContainer/Text_HBoxContainer/Text_VBoxContainer/Text_Label")
next_button = NodePath("Next_Button")

[node name="Dialog_MarginContainer" type="MarginContainer" parent="."]
light_mask = 0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = -286.0
rect_min_size = Vector2( 0, 290 )
size_flags_horizontal = 3
custom_constants/margin_right = 50
custom_constants/margin_top = 50
custom_constants/margin_left = 50
custom_constants/margin_bottom = 50
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Border_ColorRect" type="ColorRect" parent="Dialog_MarginContainer"]
light_mask = 0
margin_left = 50.0
margin_top = 50.0
margin_right = 1870.0
margin_bottom = 240.0

[node name="Main_MarginContainer" type="MarginContainer" parent="Dialog_MarginContainer"]
light_mask = 0
margin_left = 50.0
margin_top = 50.0
margin_right = 1870.0
margin_bottom = 240.0
custom_constants/margin_right = 8
custom_constants/margin_top = 8
custom_constants/margin_left = 8
custom_constants/margin_bottom = 8

[node name="Background_ColorRect" type="ColorRect" parent="Dialog_MarginContainer/Main_MarginContainer"]
light_mask = 0
margin_left = 8.0
margin_top = 8.0
margin_right = 1812.0
margin_bottom = 182.0
color = Color( 0, 0, 0, 1 )

[node name="Text_MarginContainer" type="MarginContainer" parent="Dialog_MarginContainer/Main_MarginContainer"]
light_mask = 0
margin_left = 8.0
margin_top = 8.0
margin_right = 1812.0
margin_bottom = 182.0
mouse_filter = 1
custom_constants/margin_right = 20
custom_constants/margin_top = 20
custom_constants/margin_left = 40
custom_constants/margin_bottom = 20

[node name="Text_HBoxContainer" type="HBoxContainer" parent="Dialog_MarginContainer/Main_MarginContainer/Text_MarginContainer"]
light_mask = 0
margin_left = 40.0
margin_top = 20.0
margin_right = 1784.0
margin_bottom = 154.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Text_VBoxContainer" type="VBoxContainer" parent="Dialog_MarginContainer/Main_MarginContainer/Text_MarginContainer/Text_HBoxContainer"]
light_mask = 0
margin_right = 1744.0
margin_bottom = 134.0
size_flags_horizontal = 3
alignment = 1

[node name="Name_Label" type="Label" parent="Dialog_MarginContainer/Main_MarginContainer/Text_MarginContainer/Text_HBoxContainer/Text_VBoxContainer"]
light_mask = 0
margin_right = 1744.0
margin_bottom = 65.0
size_flags_vertical = 3
custom_fonts/font = ExtResource( 1 )
text = "Me"
valign = 1

[node name="Text_Label" type="Label" parent="Dialog_MarginContainer/Main_MarginContainer/Text_MarginContainer/Text_HBoxContainer/Text_VBoxContainer"]
light_mask = 0
margin_top = 69.0
margin_right = 1744.0
margin_bottom = 134.0
size_flags_horizontal = 3
size_flags_vertical = 3
text = "Sample text for development"
valign = 1
autowrap = true
percent_visible = 0.0

[node name="Next_Button" type="Button" parent="."]
light_mask = 0
anchor_right = 1.0
anchor_bottom = 1.0
rect_min_size = Vector2( 130, 130 )
focus_mode = 0
enabled_focus_mode = 0
flat = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Tween" type="Tween" parent="."]
