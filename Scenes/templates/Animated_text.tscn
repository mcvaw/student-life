[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Control


# Текст в первой строчке
export (String) var text_1
# Текст во второй строчке
export (String) var text_2
# Время анимации на символ, можно не менять
export (float, 0.1, 0.3) var animation_duration = 0.15
# Задежки до и после (можно не менять)
export (float, 0, 2) var delay_before = 1.0
export (float, 0, 2) var delay_after = 1.0
export (float, 0, 2) var delay_between = 1.0

# Объекты сцены
# Текст сверху
onready var label = $ColorRect/VBox/Label
# Текст снизу
onready var label2 = $ColorRect/VBox/Label2
# Tween
onready var effect = $Tween


func get_delay() -> float:
	return (delay_before 
	+ animation_duration * (len(text_1) + len(text_2)) 
	+ delay_after
	+ delay_between)


func _start() -> void:
	label.percent_visible = 0
	label2.percent_visible = 0
	label.text = text_1
	label2.text = text_2
	# Задержка до начала анимации
	yield(get_tree().create_timer(delay_before), \"timeout\")
	# Анимация верхней строчки
	effect.interpolate_property(
		label, \"percent_visible\",
		0, 1, animation_duration * len(text_1),
		Tween.TRANS_LINEAR,
		Tween.EASE_IN_OUT
	)
	effect.start()
	# Задержка перед анимацией
	# второй строчки
	yield(get_tree().create_timer(
		animation_duration * len(text_1) + delay_between), 
		\"timeout\"
	)
	# Анимация нижней строчки
	effect.interpolate_property(
		label2, \"percent_visible\",
		0, 1, animation_duration * len(text_2),
		Tween.TRANS_LINEAR,
		Tween.EASE_IN_OUT
	)
	effect.start()

"

[node name="Control" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}
text_1 = "28.06.20"
text_2 = "Утро. Поезд"

[node name="ColorRect" type="ColorRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBox" type="VBoxContainer" parent="ColorRect"]
anchor_right = 1.0
anchor_bottom = 1.0
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="ColorRect/VBox"]
margin_top = 438.0
margin_right = 1920.0
margin_bottom = 538.0
rect_min_size = Vector2( 0, 100 )
text = "Sample text"
align = 1
valign = 1

[node name="Label2" type="Label" parent="ColorRect/VBox"]
margin_top = 542.0
margin_right = 1920.0
margin_bottom = 642.0
rect_min_size = Vector2( 0, 100 )
text = "Something else"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Tween" type="Tween" parent="."]
