[gd_scene load_steps=7 format=2]

[ext_resource path="res://Sprites/outside/Old guide.png" type="Texture" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Sprite

# TODO: remove animation from script!

onready var anim = $WalkCycle_AnimationPlayer
export (Array, NodePath) var nodes
const max_distance = 250
var player
var target
var ind = 0
# Current position
var cdir = -1
const e = 3
const speed = 500
# Directions
enum {DOWN, UP, LEFT, RIGHT}


func distance_between(obj1, obj2) -> float:
	var dx = obj1.position.x - obj2.position.x
	var dy = obj1.position.y - obj2.position.y
	return sqrt(dx*dx+dy*dy)


func not_equal(x:float, y:float) -> bool:
	return abs(x - y) > e*2


func _process(delta):
	if distance_between(player, self) < max_distance or distance_between(self, target) > distance_between(player, target):
		var changed = false
		
		if not_equal(position.x, target.position.x):
			changed = true
			if position.x < target.position.x:
				position.x += speed * delta
				if cdir != RIGHT:
					cdir = RIGHT
					anim.play(\"side\")
					flip_h = false
			else:
				position.x -= speed * delta
				if cdir != LEFT:
					cdir = LEFT
					anim.play(\"side\")
					flip_h = true
		
		if not_equal(position.y, target.position.y):
			if position.y > target.position.y:
				position.y -= speed * delta
				if !changed && cdir != UP:
					cdir = UP
					anim.play(\"up\")
			else:
				position.y += speed * delta
				if !changed && cdir != DOWN:
					cdir = DOWN
					anim.play(\"down\")
			changed = true
		
		# Next point
		if !changed:
			if ind + 1 < nodes.size():
				ind += 1
				target = get_node(nodes[ind])
			else:
				set_process(false)
				anim.stop()
				frame = 6
	else:
		anim.stop()
		frame = 6
		cdir = -1


func _ready():
	if has_node(GLOBAL.player_path):
		player = get_node(GLOBAL.player_path)
	target = get_node(nodes[ind])
		
"

[sub_resource type="Animation" id=2]
resource_name = "down"
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 0, 3 ]
}

[sub_resource type="Animation" id=3]
length = 0.8
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 8, 5, 8, 2 ]
}

[sub_resource type="Animation" id=4]
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 1, 4 ]
}

[sub_resource type="RectangleShape2D" id=5]
extents = Vector2( 6.682, 16.5 )

[node name="Guide-AI-Template_Sprite" type="Sprite"]
texture = ExtResource( 1 )
vframes = 3
hframes = 3
script = SubResource( 1 )

[node name="WalkCycle_AnimationPlayer" type="AnimationPlayer" parent="."]
anims/down = SubResource( 2 )
anims/side = SubResource( 3 )
anims/up = SubResource( 4 )

[node name="GuideCollider_StaticBody2D" type="StaticBody2D" parent="."]
collision_layer = 0
collision_mask = 1024

[node name="GuideCollider_CollisionShape2D" type="CollisionShape2D" parent="GuideCollider_StaticBody2D"]
position = Vector2( -0.284794, -0.569584 )
shape = SubResource( 5 )
