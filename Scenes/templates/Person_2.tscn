[gd_scene load_steps=7 format=2]

[ext_resource path="res://Sprites/npc_2.png" type="Texture" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

# NPC

export (NodePath) var prev_target_path
export (NodePath) var target_path
onready var sp = $PersonTexture_Sprite
onready var anim = $WalkCycle_AnimationPlayer
var speed = 250
const e = 1
var cdir = -1
var target
# Directions
enum {DOWN, UP, LEFT, RIGHT}


func vector_diff(p1 : Vector2, p2 : Vector2) -> bool:
	var xdif := (p1.x - p2.x)
	var ydif := (p1.y - p2.y)
	return sqrt(xdif*xdif + ydif*ydif) <= e*3


func not_equal(x:float, y:float) -> bool:
	return abs(x - y) > e


func _process(delta):
	if !vector_diff(position, target.position):
		# X
		var changed = false
		var xtmp = not_equal(position.x, target.position.x)
		var ytmp = not_equal(position.y, target.position.y)
		if xtmp:
			changed = true
			if position.x < target.position.x:
				if ytmp:
					position.x += speed * 0.7 * delta
				else:
					position.x += speed * delta
				if cdir != RIGHT:
					cdir = RIGHT
					anim.play(\"side\")
					sp.flip_h = false
			else:
				if ytmp:
					position.x -= speed * 0.7 * delta
				else:
					position.x -= speed * delta
				if cdir != LEFT:
					cdir = LEFT
					anim.play(\"side\")
					sp.flip_h = true
		if ytmp:
			if position.y > target.position.y:
				if xtmp:
					position.y -= speed * 0.7 * delta
				else:
					position.y -= speed * delta
				if !changed:
					if !changed && cdir != UP:
						cdir = UP
						anim.play(\"up\")
			else:
				if xtmp:
					position.y += speed * 0.7 * delta
				else:
					position.y += speed * delta
				if !changed && cdir != DOWN:
					cdir = DOWN
					anim.play(\"down\")
			changed = true
	else:
		# NPC is not far away from target
		position = target.position
		var tmp = target_path
		target_path = target.get_random_point_ex(prev_target_path)
		prev_target_path = tmp
		target = get_node(target_path)


func _ready():
	target = get_node(target_path)
"

[sub_resource type="Animation" id=2]
resource_name = "down"
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("PersonTexture_Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 0, 3 ]
}

[sub_resource type="Animation" id=3]
length = 0.8
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("PersonTexture_Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 8, 5, 8, 2 ]
}

[sub_resource type="Animation" id=4]
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("PersonTexture_Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 1, 4 ]
}

[sub_resource type="RectangleShape2D" id=5]
extents = Vector2( 15, 10 )

[node name="Person-Template_0" type="Node2D"]
z_index = 4
z_as_relative = false
script = SubResource( 1 )

[node name="VisibilityEnabler2D" type="VisibilityEnabler2D" parent="."]
position = Vector2( 0, -48.9753 )
rect = Rect2( -50, -60, 100, 120 )
process_parent = true
physics_process_parent = true

[node name="PersonTexture_Sprite" type="Sprite" parent="."]
position = Vector2( -0.307358, -51.0823 )
scale = Vector2( 3, 3 )
texture = ExtResource( 1 )
vframes = 3
hframes = 3

[node name="WalkCycle_AnimationPlayer" type="AnimationPlayer" parent="."]
anims/down = SubResource( 2 )
anims/side = SubResource( 3 )
anims/up = SubResource( 4 )

[node name="Collider_StaticBody2D" type="StaticBody2D" parent="."]
position = Vector2( 0, -9.85287 )
collision_layer = 0
collision_mask = 1024

[node name="Collider_CollisionShape2D" type="CollisionShape2D" parent="Collider_StaticBody2D"]
shape = SubResource( 5 )
