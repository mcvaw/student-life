[gd_scene load_steps=4 format=2]

[ext_resource path="res://Scenes/templates/Fog_of_war_sprite.tscn" type="PackedScene" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

\"\"\"
		Туман войны.
Создает массив NxM из объекта dub.
Отражает каждый следующий объект по горизонтали горизонтально
и каждый следующий вертикальный объект вертикально.
Затем перенастраивает StaticBody2D 
на работу с новыми размерами.
\"\"\"

# Размеры
export (int, 1, 200) var n
export (int, 1, 200) var m
# Экземпляр анимированного тайла с шумом
export (String, FILE, \"*.tscn\") var dub
# Static Body 2D
export (NodePath) var sb
# Нужно ли быть непроходимым
export (bool) var use_static_body = true

func _ready():
	var nd = load(dub)
	for i in range(n):
		for j in range(m):
			if i == 0 and j == 0:
				get_child(0).playing = true
			else:
				var tmp = nd.instance()
				add_child(tmp)
				tmp.position = Vector2(96+i*192, 96+j*192)
				if i % 2 != 0:
					tmp.flip_h = true
				if j % 2 != 0:
					tmp.flip_v = true
				tmp.playing = true
	# StaticBody2D
	if use_static_body:
		var stat_body = get_node(sb)
		stat_body.position = Vector2(96*n, 96*m)
		stat_body.scale = Vector2(n, m)
	else:
		remove_child(get_node(sb))
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 96, 96 )

[node name="Noise" type="Node2D"]
script = SubResource( 1 )
n = 1
m = 1
dub = "res://Scenes/templates/Fog_of_war_sprite.tscn"
sb = NodePath("StaticBody2D")

[node name="AnimatedSprite" parent="." instance=ExtResource( 1 )]

[node name="StaticBody2D" type="StaticBody2D" parent="."]
position = Vector2( 96, 96 )
__meta__ = {
"_edit_group_": true
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D"]
shape = SubResource( 2 )
