[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=2]
script/source = "extends Tween

onready var canvas := $\"/root/ui/CanvasLayer\"
const time := 0.5
const start := Color(0, 0, 0, 0)
const end := Color(0, 0, 0, 1)


func create_color_rect() -> void:
	var tmp := ColorRect.new()
	tmp.color = start
	tmp.name = \"transition\"
	tmp.rect_min_size = Vector2(1920, 1080)
	canvas.add_child(tmp)


func fade_in() -> void:
	create_color_rect()
	var color_rect = canvas.get_node(\"transition\")
	interpolate_property(
		color_rect, \"color\",
		start, end, time, 
		Tween.TRANS_QUAD, Tween.EASE_IN_OUT)
	start()


func fade_out() -> void:
	var color_rect = canvas.get_node(\"transition\")
	interpolate_property(
		color_rect, \"color\",
		end, start, time, 
		Tween.TRANS_QUAD, Tween.EASE_IN_OUT)
	start()
	yield(get_tree().create_timer(time), \"timeout\")
	canvas.remove_child(color_rect)


# Общая функция для смены сцен
func load_scene(scene_name : String, anim_start : bool = true, anim_end : bool = true) -> void:
	# Анимация затухания
	if anim_start:
		fade_in()
		yield(get_tree().create_timer(time), \"timeout\")
	
	# Загрузка сцены
	var file_exists := Directory.new().file_exists(scene_name)
	if (file_exists):
		assert(get_tree().change_scene(scene_name) == OK)
	else:
		get_node(\"/root/show_nf\").show_notification(\"Не могу найти сцену\")
	
	# Анимация появления
	if anim_end:
		if !anim_start:
			create_color_rect()
			canvas.get_node(\"transition\").color = end
		fade_out()
	elif anim_start:
			canvas.remove_child(canvas.get_node(\"transition\"))


"

[node name="Tween" type="Tween"]
script = SubResource( 2 )
