[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Control

onready var effect = $Tween
onready var cm = $CanvasModulate
export (Color) var start = Color(1, 1, 1, 1)
export (Color) var end = Color(0, 0, 0, 1)
export (float, 0.1, 3) var time = 0.5


func fade_in():
	effect.interpolate_property(cm, \"color\",
			start, end, time, 
			Tween.TRANS_QUAD, Tween.EASE_IN_OUT)
	effect.start()
	

func fade_out():
	effect.interpolate_property(cm, \"color\",
			end, start, time, 
			Tween.TRANS_QUAD, Tween.EASE_IN_OUT)
	effect.start()

# Общая функция для смены сцен.
# Позже можно добавить анимацию, изменив лишь эту функцию,
# Не затрагивая множество разных скриптов
func load_scene(scene_name : String, anim_start : bool = true, anim_end : bool = true) -> void:
	# Анимация затухания
	if anim_start:
		fade_in()
		yield(get_tree().create_timer(time), \"timeout\")
	
	# Загрузка сцены
	assert(get_tree().change_scene(scene_name) == OK)
	
	# Анимация появления
	if anim_end:
		fade_out()

"

[node name="Control" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
rect_min_size = Vector2( 1920, 1080 )
mouse_filter = 2
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Tween" type="Tween" parent="."]

[node name="CanvasModulate" type="CanvasModulate" parent="."]
