[gd_scene load_steps=4 format=2]

[ext_resource path="res://Audio/fx/Button_click_01.wav" type="AudioStream" id=1]
[ext_resource path="res://Audio/fx/Dialog.wav" type="AudioStream" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends AudioStreamPlayer


var num = 0
export (AudioStream) var btn_click_sound
export (AudioStream) var dialog_sound
var volume : float setget set_volume, get_volume
const max_volume := 5
const min_volume := -35


func set_volume(value : float) -> void:
	if value > max_volume:
		value = max_volume
	elif value < min_volume:
		value = min_volume
	volume = value
	AudioServer.set_bus_volume_db(2, volume)
	# Mute
	if volume == min_volume:
		AudioServer.set_bus_mute(2, true)
	elif AudioServer.is_bus_mute(2):
		AudioServer.set_bus_mute(2, false)


func get_volume() -> float:
	return volume


func destroy(name : int) -> void:
	var player = get_node(str(name))
	remove_child(player)


# Button click
func btn_click() -> void:
	play_sound(btn_click_sound)


# Dialog activation
func dialog() -> void:
	play_sound(dialog_sound)


func play_sound(obj : AudioStream) -> void:
	# Is this player free?
	if (!self.playing):
		self.stream = obj
		self.play()
	# Create new player
	else:
		var player : = AudioStreamPlayer.new()
		player.name = str(num)
		player.stream = obj
		player.bus = \"FX\"
		var state = player.connect(\"finished\", self, \"destroy\", [num])
		assert(state == OK)
		add_child(player)
		get_node(str(num)).play()
		num += 1
"

[node name="FX-Global_AudioStreamPlayer" type="AudioStreamPlayer"]
bus = "FX"
script = SubResource( 1 )
btn_click_sound = ExtResource( 1 )
dialog_sound = ExtResource( 2 )
